(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{362:function(t,a,e){"use strict";e.r(a);var n=e(0),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"rabbitmq的简单说明"}},[t._v("rabbitmq的简单说明")]),t._v(" "),e("h2",{attrs:{id:"安装"}},[t._v("安装")]),t._v(" "),e("h3",{attrs:{id:"采用docker安装"}},[t._v("采用docker安装")]),t._v(" "),e("p",[e("code",[t._v("sudo docker pull rabbitmq:3.7-management")])]),t._v(" "),e("h3",{attrs:{id:"启动"}},[t._v("启动")]),t._v(" "),e("p",[e("code",[t._v("sudo docker run -d --hostname localhost --name myrabbit -p 15672:15672 -p 5672:5672 rabbitmq:3.7-management")])]),t._v(" "),e("h2",{attrs:{id:"端口连接说明"}},[t._v("端口连接说明")]),t._v(" "),e("h3",{attrs:{id:"管理后台登录：127-0-0-1-15672"}},[t._v("管理后台登录：127.0.0.1:15672")]),t._v(" "),e("h3",{attrs:{id:"连接rabbitmq"}},[t._v("连接rabbitmq:")]),t._v(" "),e("p",[t._v("1、定义mqurl\n"),e("code",[t._v("// url格式 amqp://账号：密码@host:port/vhost")]),t._v(" "),e("code",[t._v('MQURL = "amqp://imoocuser:imoocuser@127.0.0.1:5672/imooc"')])]),t._v(" "),e("p",[t._v("2、定义结构体")]),t._v(" "),e("div",{staticClass:"language-golang extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("type RabbitMQ struct {\n\tconn    *amqp.Connection\n\tchannel *amqp.Channel\n\t//队列名称\n\tQueueName string\n\t//交换机\n\tExchange string\n\t//key\n\tKey string\n\t//连接信息\n\tMqurl string\n}\n")])])]),e("p",[t._v("3、创建结构体实例")]),t._v(" "),e("div",{staticClass:"language-golang extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('func NewRabbitMQ(queueName string, exchange string, key string) *RabbitMQ {\n\trabbitmq := &RabbitMQ{QueueName: queueName, Exchange: exchange, Key: key, Mqurl: MQURL}\n\tvar err error\n\t//创建rabbitmq连接\n\trabbitmq.conn, err = amqp.Dial(rabbitmq.Mqurl)\n\trabbitmq.failOnErr(err, "创建连接错误")\n\trabbitmq.channel, err = rabbitmq.conn.Channel()\n\trabbitmq.failOnErr(err, "获取channel失败")\n\treturn rabbitmq\n}\n')])])]),e("h3",{attrs:{id:"其他管理"}},[t._v("其他管理")]),t._v(" "),e("p",[t._v("1、断开连接")]),t._v(" "),e("div",{staticClass:"language-golang extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("func (r *RabbitMQ) Destory() {\n\t_ = r.channel.Close()\n\t_ = r.conn.Close()\n}\n")])])]),e("p",[t._v("2、错误处理函数")]),t._v(" "),e("div",{staticClass:"language-golang extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('func (r *RabbitMQ) failOnErr(err error, message string) {\n\tif err != nil {\n\t\tlog.Fatalf("%s,%s", message, err)\n\t\tpanic(fmt.Sprintf("%s,%s", message, err))\n\t}\n}\n')])])])])}),[],!1,null,null,null);a.default=r.exports}}]);